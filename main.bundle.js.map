{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/actions/actionTypes.js","webpack:///./src/actions/actions.js","webpack:///./src/components/card/card.jsx","webpack:///./src/components/card/card.scss?231c","webpack:///./src/components/header/header.jsx","webpack:///./src/components/header/header.scss?3a2b","webpack:///./src/components/list/list.jsx","webpack:///./src/components/list/list.scss?3823","webpack:///./src/constants/itemTypes.js","webpack:///./src/containers/board/board.jsx","webpack:///./src/containers/board/board.scss?8071","webpack:///./src/index.js","webpack:///./src/reducers/index.js","webpack:///./src/reducers/lists.js","webpack:///./src/styles.scss","webpack:///supports-color (ignored)","webpack:///chalk (ignored)","webpack:///fs (ignored)"],"names":["ADD_LIST","EDIT_LIST","ADD_CARD","EDIT_CARD","MOVE_CARD","DELETE_CARD","TOGGLE_LABEL","ActionTypes","addList","listName","type","payload","editList","name","listId","addCard","message","editCard","cardId","moveCard","dragIndex","dragListId","hoverIndex","hoverListId","deleteCard","cardIndex","toggleLabel","label","cardSource","beginDrag","props","id","card","index","listLength","canDrag","monitor","isDragging","getItem","cardTarget","hover","component","dragList","hoverList","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","Card","ItemTypes","CARD","connectDropTarget","connect","dropTarget","connectDragSource","dragSource","state","submitted","handleChange","bind","handleSubmit","event","setState","target","value","preventDefault","menuCard","isMenuCard","labels","one","two","three","onMenuClick","menu","document","getElementById","focus","React","Component","Header","List","HTML5Backend","list","cards","getColumn","collection","column","subArray","keys","_","forEach","push","Board","overlay","menuList","submitList","submitCard","addTrailingList","addTrailingCard","blur","find","findLast","lists","nextForm","isEmpty","times","map","mapStateToProps","mapDispatchToProps","dispatch","App","store","rootReducer","action","currentList","dragCard","splice"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Action Types\n\nexport const ADD_LIST = 'ADD_LIST';\nexport const EDIT_LIST = 'EDIT_LIST';\nexport const ADD_CARD = 'ADD_CARD';\nexport const EDIT_CARD = 'EDIT_CARD';\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const TOGGLE_LABEL = 'TOGGLE_LABEL';\n","import * as ActionTypes from './actionTypes';\n\n/*\n* Action creators\n*/\n\nexport const addList = (listName) => {\n    return {\n        type: ActionTypes.ADD_LIST,\n        payload: listName\n    };\n}\n\nexport const editList = (name, listId) => {\n    return {\n        type: ActionTypes.EDIT_LIST,\n        payload: {\n            name,\n            listId\n        }\n    };\n}\n\nexport const addCard = (message, listId) => {\n    return {\n        type: ActionTypes.ADD_CARD,\n        payload: {\n            message,\n            listId\n        }\n    };\n}\n\nexport const editCard = (message, listId, cardId) => {\n    return {\n        type: ActionTypes.EDIT_CARD,\n        payload: {\n            message,\n            listId,\n            cardId\n        }\n    };\n}\n\nexport const moveCard = (dragIndex, dragListId, hoverIndex, hoverListId) => {\n    return {\n        type: ActionTypes.MOVE_CARD,\n        payload: {\n            dragIndex,\n            dragListId,\n            hoverIndex,\n            hoverListId\n        }\n    };\n}\n\nexport const deleteCard = (listId, cardIndex) => {\n    return {\n        type: ActionTypes.DELETE_CARD,\n        payload: {\n            listId,\n            cardIndex\n        }\n    };\n}\n\nexport const toggleLabel = (listId, cardId, label) => {\n    return {\n        type: ActionTypes.TOGGLE_LABEL,\n        payload: {\n            listId,\n            cardId,\n            label\n        }\n    };\n}","import React from 'react';\nimport { findDOMNode } from 'react-dom'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport ItemTypes from '../../constants/itemTypes';\nimport { MdMoreHoriz, MdAdd } from 'react-icons/lib/md';\nimport './card.scss';\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.card.id,\n            index: props.index,\n            listId: props.listId,\n            listLength: props.listLength\n        }\n    },\n    canDrag(props, monitor) {\n        return !!props.card.message;\n    },\n    isDragging(props, monitor) {\n        return props.card.id === monitor.getItem().id;\n    },\n}\n\nconst cardTarget = {\n\thover(props, monitor, component) {\n        const dragIndex = monitor.getItem().index\n        const dragList = monitor.getItem().listId\n        const hoverIndex = props.index\n        const hoverList = props.listId\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex && dragList === hoverList) {\n\t\t\treturn\n        }\n        \n        // Don't replace an \"Add a card\" trailing card\n        // unless it's the only card in the list\n        if (!props.card.message && hoverIndex !== 0) {\n\t\t\treturn\n        }\n\n\t\t// Determine rectangle on screen\n\t\tconst hoverBoundingRect = findDOMNode(component).getBoundingClientRect()\n\n\t\t// Get vertical middle\n\t\tconst hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n\t\t// Determine mouse position\n\t\tconst clientOffset = monitor.getClientOffset()\n\n\t\t// Get pixels to the top\n\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t// Dragging downwards\n\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\treturn\n\t\t}\n\n\t\t// Dragging upwards\n\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\treturn\n        }\n\n\t\t// Time to actually perform the action\n\t\tprops.moveCard(dragIndex, dragList, hoverIndex, hoverList)\n\n\t\t// Note: we're mutating the monitor item here!\n\t\t// Generally it's better to avoid mutations,\n\t\t// but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        monitor.getItem().listId = hoverList\n        monitor.getItem().index = hoverIndex\n    },\n}\n\n@DropTarget(ItemTypes.CARD, cardTarget, connect => ({\n\tconnectDropTarget: connect.dropTarget(),\n}))\n@DragSource(ItemTypes.CARD, cardSource, (connect, monitor) => ({\n\tconnectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n}))\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: this.props.card.message ? this.props.card.message : '',\n            submitted: this.props.card.message ? true : false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            message: event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        this.setState({\n            submitted: true\n        });\n\n        if (this.state.message) {\n            this.props.editCard(this.state.message, this.props.card.id);\n        }\n    }\n\n    render() {\n        let { card, listId, menuCard, index, isDragging, connectDragSource, connectDropTarget } = this.props;\n        const isMenuCard = menuCard === card.id; // Is this card the current menu card\n\n        return connectDragSource(connectDropTarget(\n            <div className={`card note-card mb-3 ${isDragging ? 'dragging' : ''} ${isMenuCard ? 'card-menu' : ''}`}>\n                <div className='card-header'>\n                    <div className=\"container\">\n                        <div className={`row justify-content-left pt-0 ${isMenuCard ? 'menu-active' : ''}`}>\n                            {(card.labels.one || isMenuCard) &&\n                                <div className=\"col-4 hide-overflow text-center\">\n                                    <span className={`badge align-middle badge-pill label ${card.labels.one ? `active` : ''} one`} onClick={() => {\n                                        if (isMenuCard) {\n                                            this.props.toggleLabel(listId, card.id, 'one')\n                                        }\n                                    }}> </span>\n                                </div>\n                            }\n                            {(card.labels.two || isMenuCard) && \n                                <div className=\"col-4 hide-overflow text-center\">\n                                    <span className={`badge align-middle badge-pill label ${card.labels.two ? `active` : ''} two`} onClick={() => {\n                                        if (isMenuCard) {\n                                            this.props.toggleLabel(listId, card.id, 'two')\n                                        }\n                                    }}> </span>\n                                </div>\n                            }\n                            {(card.labels.three || isMenuCard) &&\n                                <div className=\"col-4 hide-overflow text-center\">\n                                    <span className={`badge align-middle badge-pill label ${card.labels.three ? `active` : ''} three`} onClick={() => {\n                                        if (isMenuCard) {\n                                            this.props.toggleLabel(listId, card.id, 'three')\n                                        }\n                                    }}> </span>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <form className=\"input-group\" onSubmit={this.handleSubmit}>\n                        <input  type=\"text\" className=\"form-control pl-3 card-message\" \n                                placeholder=\"Add a card\" \n                                onChange={this.handleChange}\n                                value={this.state.message}\n                                id={`input_${card.id}`}\n                                disabled={this.state.submitted}\n                                onBlur={(event) => {\n                                    if (this.state.message) {\n                                        this.handleSubmit(event);\n                                    }\n                                }} />\n                        <div className=\"input-group-append pl-2 pr-1 pt-1\">\n                            <span>\n                                <div className={`btn btn-sm btn-light card-menu ${isMenuCard ? 'disabled' : ''}`} onClick={(event) => {\n                                    if (card.message) {\n                                        this.props.onMenuClick(listId, card.id);\n                                        this.setState({ menu: true });\n                                    } else {\n                                        if (this.state.message) {\n                                            this.handleSubmit(event);\n                                        } else {\n                                            document.getElementById(`input_${card.id}`).focus();\n                                        }\n                                    }\n                                }}>\n                                    {card.message &&\n                                        <MdMoreHoriz className=\"mb-1\" />\n                                    ||\n                                        <MdAdd className=\"mb-1\" />\n                                    }\n                                </div>\n                            </span>\n                        </div>\n                    </form>\n                    <div className={isMenuCard ? `show-menu container` : 'collapse-menu'}>\n                        <div className={isMenuCard ? `` : 'd-none'}>\n                            <div className=\"row justify-content-center mt-1\">\n                                <div className=\"col-5\">\n                                    <span className=\"btn btn-sm btn-light menu-button\" onClick={() => {\n                                        this.setState({ submitted: false }, () => document.getElementById(`input_${card.id}`).focus());\n                                    }}>\n                                        Edit\n                                    </span>\n                                </div>\n                                <div className=\"col-5\">\n                                    <span className=\"btn btn-sm btn-light menu-button\" onClick={() => {\n                                        this.props.deleteCard(listId, index);\n                                    }}>Delete</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ));\n    }\n}\n\nexport default Card;","// extracted by mini-css-extract-plugin","import React from 'react';\nimport './header.scss';\n\nconst Header = (props) => {\n    return (\n        <div className='header'>\n            <div className='container'>\n                <div className='row title-container justify-content-center align-items-center'>\n                    <div className='col-3'>\n                        <div className='title text-center'>frello</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","// extracted by mini-css-extract-plugin","import React from 'react';\nimport Card from '../card/card';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { map, isEmpty } from 'lodash';\nimport { MdMoreHoriz, MdAdd } from 'react-icons/lib/md';\nimport './list.scss';\n\n@DragDropContext(HTML5Backend)\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: this.props.list.name ? this.props.list.name : ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            name: event.target.value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        if (this.state.name) {\n            // Don't submit unless there is something for the name\n            this.props.editList(this.state.name, this.props.list.id);\n        }\n    }\n\n    render() {\n        let { list } = this.props;\n\n        return (\n            <div className='card mb-4 list-card'>\n                <div className='card-header'>\n                    <form className=\"input-group\" onSubmit={this.handleSubmit}>\n                        <input  type=\"text\" className=\"form-control list-name\" \n                                placeholder=\"Create new list\" \n                                value={this.state.name} \n                                onChange={this.handleChange}\n                                id={`input_${list.id}`} />\n                        <div className=\"input-group-append pl-2 pt-1\">\n                            <span>\n                                <div className=\"btn btn-sm btn-light list-menu\">\n                                    {list.name &&\n                                        <MdMoreHoriz className=\"mb-1\" />\n                                    ||\n                                        <MdAdd className=\"mb-1\" onClick={(event) => {\n                                            if (this.state.name) {\n                                                this.handleSubmit(event);\n                                            } else {\n                                                document.getElementById(`input_${list.id}`).focus();\n                                            }\n                                        }} />\n                                    }\n                                </div>\n                            </span>\n                        </div>\n                    </form>\n                </div>\n                {list.name && \n                    <div className='card-body'>\n                        {map(list.cards, (card, index) => {\n                            return <Card key={card.id} \n                                        listId={list.id} \n                                        card={card} \n                                        index={index} \n                                        editCard={this.props.editCard} \n                                        moveCard={this.props.moveCard}\n                                        deleteCard={this.props.deleteCard}\n                                        onMenuClick={this.props.onMenuClick}\n                                        menuCard={this.props.menuCard}\n                                        toggleLabel={this.props.toggleLabel} />;\n                        })}\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default List;","// extracted by mini-css-extract-plugin","/**\n *  React DnD item types\n */\n\n export default {\n     CARD: 'card'\n }","import React from 'react';\nimport _ from 'lodash';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addList, editList, addCard, editCard, moveCard, deleteCard, toggleLabel } from '../../actions/actions';\n\nimport List from '../../components/list/list';\nimport { MdSentimentVerySatisfied } from 'react-icons/lib/md';\nimport './board.scss';\nimport index from '../../reducers';\n\nconst getColumn = (collection, column) => {\n    /*\n    *   This function handles organizing the collection of lists that is stored in state into four separate arrays for display\n    *   This is necessary utility function to display in a masonry-esque format\n    */\n\n    let subArray = [];\n    const keys = _.keys(collection);\n    \n    _.forEach(keys, (listId, index) => {\n        if ((index - column) % 4 === 0) {\n            subArray.push(collection[listId]);\n        }\n    });\n\n    return subArray;\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            overlay: false,\n            menuList: null,\n            menuCard: null\n        }\n\n        this.submitList = this.submitList.bind(this);\n        this.submitCard = this.submitCard.bind(this);\n        this.addTrailingList = this.addTrailingList.bind(this);\n        this.addTrailingCard = this.addTrailingCard.bind(this);\n        this.onMenuClick = this.onMenuClick.bind(this);\n        this.deleteCard = this.deleteCard.bind(this);\n    }\n\n    submitList(name, id, list) {\n        if (!list.name) {\n            this.addTrailingList();\n        } else {\n            document.getElementById(`input_${id}`).blur();\n        }\n        \n        this.props.editList(name, id);\n    }\n\n    submitCard(message, cardId, list) {\n        const card = _.find(list.cards, { 'id': cardId });\n\n        if (!card.message) {\n            this.addTrailingCard(list.id);\n        } else {\n            document.getElementById(`input_${cardId}`).blur();\n        }\n        \n        this.props.editCard(message, list.id, cardId);\n    }\n\n    async addTrailingList() {\n        // Add an empty list\n        await this.props.addList(null); // Need to await the completion of this, otherwise you'll target the wrong list\n        \n        // Place the cursor in the new list\n        const id = _.findLast(this.props.lists).id; // Grab the last list in the object\n        const nextForm = document.getElementById(`input_${id}`);\n        nextForm.focus();\n\n        this.props.addCard(null, id); // Add an empty card to each list\n    }\n\n    async addTrailingCard(listId) {\n        // Add an empty list\n        await this.props.addCard(null, listId); // Need to await the completion of this, otherwise you'll target the wrong card\n        \n        // Place the cursor in the new list\n        const id = _.findLast(this.props.lists[listId].cards).id; // Grab the last list in the object\n        const nextForm = document.getElementById(`input_${id}`);\n        nextForm.focus();\n    }\n\n    onMenuClick(listId = null, cardId = null) {\n        this.setState({ \n            overlay: true,\n            menuList: listId,   // Pass these to the lists and cards\n            menuCard: cardId    // so that they will know if they're the menu list/card\n        });\n    }\n\n    deleteCard(listId, cardIndex) {\n        // First reset the overlay to default\n        this.setState({ \n            overlay: false,\n            menuList: null,   \n            menuCard: null    \n        });\n\n        this.props.deleteCard(listId, cardIndex);\n    }\n\n    render() {\n        const { lists } = this.props;\n\n        return (\n            <div className='container-fluid'>\n                <div className='row justify-content-center pt-5'>\n                    {!_.isEmpty(this.props.lists) &&\n                        <div className='col-10'>\n                            <div className='row'>\n                                {_.times(4, (index) => {\n                                    /* Print out four of these */\n                                    return (\n                                        <div key={`column_${index}`} className='col-3'>\n                                            {_.map(getColumn(lists, index), (list) => {\n                                                return (\n                                                    <List   key={list.id} list={list} \n                                                            editList={(name, id) => this.submitList(name, id, list)} \n                                                            editCard={(message, id) => this.submitCard(message, id, list)}\n                                                            moveCard={this.props.moveCard}\n                                                            deleteCard={(listId, cardIndex) => this.deleteCard(listId, cardIndex)}\n                                                            onMenuClick={this.onMenuClick}\n                                                            menuList={this.state.menuList}\n                                                            menuCard={this.state.menuCard}\n                                                            toggleLabel={(listId, cardId, label) => this.props.toggleLabel(listId, cardId, label)} />\n                                                );\n                                            })}\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    }\n                    {_.isEmpty(this.props.lists) && \n                        <div className='instructions mt-5'>\n                            <div className='text-center py-4'><MdSentimentVerySatisfied size={60} /></div>\n                            <div>Welcome to frello! Let's start with your first list</div>\n                            <div className='text-center pt-4'>\n                                <button className='btn btn-light create-button' onClick={() => this.addTrailingList()}>CREATE LIST</button>\n                            </div>\n                        </div>\n                    }\n                </div>\n                <div className={`${this.state.overlay ? 'overlay' : ''}`} onClick={() => this.setState({ \n                    overlay: false,\n                    menuList: null,\n                    menuCard: null\n                })}></div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        lists: state.lists\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        addList,\n        editList,\n        addCard,\n        editCard,\n        moveCard,\n        deleteCard,\n        toggleLabel\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport Board from './containers/board/board';\nimport Header from './components/header/header';\nimport rootReducer from './reducers';\nimport './styles.scss';\n\nconst App = () => {\n    let store = createStore(rootReducer, composeWithDevTools());\n\n    return (\n        <Provider store={store}>\n            <div>\n                <Header />\n                <Board />\n            </div>\n        </Provider>\n    );\n}\n\nrender(<App />, document.getElementById(\"root\"));","import { combineReducers } from 'redux';\nimport lists from './lists';\n\nexport default combineReducers({\n    lists,\n});","import * as ActionTypes from '../actions/actionTypes';\nimport { cloneDeep, uniqueId, find } from 'lodash';\nimport { list } from 'postcss';\n\nexport default (state = {}, action) => {\n    const listId = uniqueId('list_');\n    const cardId = uniqueId('card_');\n\n    switch(action.type) {\n        case ActionTypes.ADD_LIST:\n            return {\n                ...state,\n                [listId]: { // Unique ID for the list\n                    name: action.payload,\n                    id: listId, // The list must be aware of it's own ID\n                    cards: []\n                }\n            };\n\n        case ActionTypes.EDIT_LIST: {\n            const { listId, name } = action.payload;\n            const currentList = state[listId];\n\n            currentList.name = name;\n\n            return {\n                ...state,\n                [listId]: currentList,\n            };\n        }\n\n        case ActionTypes.ADD_CARD: {\n            const { message, listId } = action.payload;\n            const currentList = state[listId];\n\n            currentList.cards.push({\n                message: action.payload.message,\n                id: cardId, // Every card must have a unique ID,\n                labels: {\n                    one: false,\n                    two: false,\n                    three: false\n                }\n            });\n\n            return {\n                ...state,\n                [listId]: currentList,\n            };\n        }\n\n        case ActionTypes.EDIT_CARD: {\n            const { listId, cardId, message } = action.payload;\n            const currentList = state[listId];\n            \n            const card = find(currentList.cards, { 'id': cardId });\n            card.message = message;\n\n            return {\n                ...state,\n                [listId]: currentList,\n            };\n        }\n\n        case ActionTypes.MOVE_CARD: {\n            const { dragIndex, dragListId, hoverIndex, hoverListId } = action.payload;\n            const dragList = state[dragListId];\n            const hoverList = state[hoverListId];\n\n            const dragCard = dragList.cards[dragIndex]; // Get the dragged card\n            dragList.cards.splice(dragIndex, 1); // First remove the dragged card from the array\n\n            if (dragListId === hoverListId) {\n                // This drag is occuring within the same list\n                dragList.cards.splice(hoverIndex, 0, dragCard) // Next, add the dragged card back into the array in the correct spot\n            } else {\n                // This is a drag to a separate list\n                hoverList.cards.splice(hoverIndex, 0, dragCard) // Or, add the dragged card into the new list\n            }\n            \n            return {\n                ...state,\n                [dragListId]: dragList,\n                [hoverListId]: hoverList // In some cases hoverList will be the same list as dragList, but sometimes it won't\n            };\n        }\n\n        case ActionTypes.DELETE_CARD: {\n            const { listId, cardIndex } = action.payload;\n            const currentList = state[listId];\n\n            currentList.cards.splice(cardIndex, 1); // Simply remove the card from the array\n\n            return {\n                ...state,\n                [listId]: currentList,\n            };\n        }\n\n        case ActionTypes.TOGGLE_LABEL: {\n            const { listId, cardId, label } = action.payload;\n            const currentList = state[listId];\n            \n            const card = find(currentList.cards, { 'id': cardId });\n            card.labels[label] = !card.labels[label];   // Toggle the label\n\n            return {\n                ...state,\n                [listId]: currentList,\n            };\n        }\n\n        default:\n            return state;\n    }\n}","// extracted by mini-css-extract-plugin","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}